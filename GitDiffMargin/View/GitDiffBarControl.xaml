<UserControl x:Class="GitDiffMargin.View.GitDiffBarControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:ViewModel="clr-namespace:GitDiffMargin.ViewModel"
             Width="300"
             Height="300"
             Cursor="Hand"
             d:DataContext="{d:DesignInstance ViewModel:DiffMarginViewModel}"
             d:DesignHeight="300"
             d:DesignWidth="300"
             mc:Ignorable="d">
  <UserControl.Resources>
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <Style x:Key="ButtonFocusVisual">
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate>
            <Rectangle Margin="2"
                       SnapsToDevicePixels="true"
                       Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                       StrokeDashArray="1 2"
                       StrokeThickness="1" />
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <LinearGradientBrush x:Key="ButtonNormalBackground" StartPoint="0,0" EndPoint="0,1">
      <GradientStop Offset="0" Color="#F3F3F3" />
      <GradientStop Offset="0.5" Color="#EBEBEB" />
      <GradientStop Offset="0.5" Color="#DDDDDD" />
      <GradientStop Offset="1" Color="#CDCDCD" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070" />
    <Style x:Key="PopupButtonStyle" TargetType="{x:Type Button}">
      <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
      <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}" />
      <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
      <Setter Property="BorderThickness" Value="1" />
      <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
      <Setter Property="HorizontalContentAlignment" Value="Center" />
      <Setter Property="VerticalContentAlignment" Value="Center" />
      <Setter Property="Padding" Value="1" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Button}">
            <Grid>
              <ContentPresenter Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Grid>
            <ControlTemplate.Triggers>
              <Trigger Property="IsKeyboardFocused" Value="true" />
              <Trigger Property="ToggleButton.IsChecked" Value="true" />
              <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="#ADADAD" />
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
  </UserControl.Resources>
  <ItemsControl HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                ItemsSource="{Binding DiffViewModels,
                                      Mode=TwoWay}">
    <ItemsControl.ItemsPanel>
      <ItemsPanelTemplate>
        <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
      </ItemsPanelTemplate>
    </ItemsControl.ItemsPanel>
    <ItemsControl.ItemContainerStyle>
      <Style TargetType="ContentPresenter">
        <Setter Property="Canvas.Top" Value="{Binding Top}" />
        <Setter Property="Height" Value="{Binding Height}" />
      </Style>
    </ItemsControl.ItemContainerStyle>
    <ItemsControl.ItemTemplate>
      <DataTemplate>
        <Grid>
          <Button Name="diffRectangle" Command="{Binding ShowPopUpCommand}">
            <Button.Template>
              <ControlTemplate>
                <Border Width="9"
                        BorderBrush="#F0F0F0"
                        BorderThickness="0,1,1,1">
                  <Rectangle Fill="{Binding DiffBrush}">
                    <Rectangle.ToolTip>
                      <ToolTip Content="{Binding Coordinates, Mode=OneWay}" />
                    </Rectangle.ToolTip>
                  </Rectangle>
                </Border>
              </ControlTemplate>
            </Button.Template>
          </Button>
          <Popup AllowsTransparency="True"
                 HorizontalOffset="8"
                 IsOpen="{Binding ShowPopup,
                                  Mode=TwoWay}"
                 Placement="MousePoint"
                 PlacementTarget="{Binding ElementName=diffRectangle}"
                 StaysOpen="False">
            <Border Background="Transparent">
              <StackPanel Orientation="Vertical">
                <Border HorizontalAlignment="Left"
                        Background="White"
                        BorderBrush="Black"
                        BorderThickness="1,1,1,0">
                  <StackPanel Margin="2"
                              Background="White"
                              Orientation="Horizontal">
                    <Button Style="{DynamicResource PopupButtonStyle}" ToolTip="Previous Change">
                      <Image Width="16"
                             Height="16"
                             Source="..\Resources\PreviousArrow.png" />
                    </Button>
                    <Button Style="{DynamicResource PopupButtonStyle}" ToolTip="Next Change">
                      <Image Width="16"
                             Height="16"
                             Source="..\Resources\NextArrow.png" />
                    </Button>
                    <Button Style="{DynamicResource PopupButtonStyle}" ToolTip="Rollback"
                            Command="{Binding RollbackCommand}">
                      <Image Width="16"
                             Height="16"
                             Source="..\Resources\Rollback.png" />
                    </Button>
                    <Button Style="{DynamicResource PopupButtonStyle}"
                            ToolTip="Show Difference"
                            Command="{Binding ShowDifferenceCommand}">
                      <Image Width="16"
                             Height="16"
                             Source="..\Resources\ShowDifference.png" />
                    </Button>
                    <Button Style="{DynamicResource PopupButtonStyle}" ToolTip="Copy Old Text"
                            Command="{Binding CopyOldTextCommand}">
                      <Image Width="16"
                             Height="16"
                             Source="..\Resources\CopyOldText.png" />
                    </Button>
                  </StackPanel>
                </Border>
                <Border Background="White"
                        BorderBrush="Black"
                        BorderThickness="1"
                        Visibility="{Binding IsDiffTextVisible,
                                             Converter={StaticResource BooleanToVisibilityConverter}}">
                  <TextBlock Margin="5"
                             FontFamily="Consolas"
                             FontSize="12"
                             Text="{Binding DiffText,
                                            Mode=OneWay}" />
                </Border>
              </StackPanel>
            </Border>
          </Popup>
        </Grid>
      </DataTemplate>
    </ItemsControl.ItemTemplate>
  </ItemsControl>

</UserControl>

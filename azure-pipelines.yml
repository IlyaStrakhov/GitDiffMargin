# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

pool:
  vmImage: 'VS2017-Win2016'

variables:
  patch: $[counter('versioncounter', 0)]
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

name: 3.9.2.$(patch)

steps:
- task: NuGetToolInstaller@0

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: bleddynrichards.Assembly-Info-Task.Assembly-Info-Task.Assembly-Info-NetFramework@2
  displayName: 'Update Assembly Version'
  inputs:
    VersionNumber: '$(Build.BuildNumber)'
    FileVersionNumber: '$(Build.BuildNumber)'
    InformationalVersion: '$(Build.BuildNumber)'

- task: VsixToolsUpdateVersion@1
  displayName: 'Update Vsix Version'
  inputs:
    FileName: $(Build.SourcesDirectory)\$(system.teamProject).Extension\source.extension.vsixmanifest
    VersionNumber: '$(Build.BuildNumber)'
  
- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

#- task: VSTest@2
#  inputs:
#    platform: '$(buildPlatform)'
#    configuration: '$(buildConfiguration)'

- task: CopyFiles@2
  displayName: 'Copy Artifacts to Staging'
  inputs: 
    contents: '**\?(*.vsix|extension-manifest.json|README-Marketplace.md)'
    targetFolder: '$(Build.ArtifactStagingDirectory)'
    flattenFolders: true

#- task: PowerShell@2
#  displayName: 'Rename Build Artifacts'
#  inputs:
#    targetType: 'inline'
#    script: 'Get-ChildItem ./*.vsix -Recurse | Rename-Item -NewName {$_.basename + "_" + $env:BUILD_BUILDNUMBER + $_.extension }'
#    workingDirectory: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
    artifactName: '$(system.teamProject)'